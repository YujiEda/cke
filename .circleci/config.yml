version: 2
jobs:
  build:
    docker:
      - image: quay.io/cybozu/golang:1.10-bionic
      - image: quay.io/coreos/etcd:v3.3
    working_directory: /go/src/github.com/cybozu-go/cke
    steps:
      - checkout
      # TODO use go mod
      - run: go get -v -t -d ./...
      - run: (cd /go/src/github.com/coreos/etcd; git checkout v3.3.9)
      - run: go get -v -t -d ./...
      - run: test -z "$(goimports -d . | tee /dev/stderr)"
      - run: golint -set_exit_status ./...
      - run: go test -race -v ./...
      - run:
          name: copy to shared workspace
          command: |
            mkdir -p /tmp/workspace
            go get github.com/cybozu/neco-gcp/neco-test/cke/...
            cp $(which create-disk-if-not-exists) /tmp/workspace/
            cp $(which create-qcow) /tmp/workspace/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - create-disk-if-not-exists
            - create-qcow
  mtest:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run: ./bin/run-mtest.sh
  var-lib-docker-disk:
    docker:
    - image: google/cloud-sdk
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /root/project/account.json
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Create QCOW Image that contains /var/lib/docker
          command: |
            cp /tmp/workspace/create-qcow .
            /tmp/workspace/create-disk-if-not-exists -instance=${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BUILD_NUM}-var-lib-docker-disk --account-json=/root/project/account.json
      - run:
          name: Delete Instance
          command: gcloud compute instances delete --quiet --project neco-test "${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BUILD_NUM}-var-lib-docker-disk" --zone=asia-northeast1-c || true
          when: always

workflows:
  version: 2
  main:
    jobs:
      - build
      - var-lib-docker-disk:
          requires:
          - build
      - mtest
